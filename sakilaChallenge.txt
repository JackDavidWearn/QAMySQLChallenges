-- Showing databases and using sakila database
SHOW DATABASES;
USE sakila;

-- 1) List all actors.
SELECT first_name, last_name FROM actor;

-- 2) Find the surname of the actor with the forename 'John'.
SELECT first_name, last_name FROM actor WHERE first_name = 'John';

-- 3) Find all actors with surname 'Neeson'.
SELECT first_name, last_name FROM actor WHERE last_name = 'Neeson';

-- 4) Find all actors with ID numbers divisible by 10.
SELECT * FROM actor WHERE (actor_id%10) = 0;

-- 5) What is the description of the movie with an ID of 100?
SELECT description FROM film WHERE film_id = 100;

-- 6) Find every R-rated movie.
SELECT title, rating FROM film WHERE rating = 'R';

-- 7) Find every non-R-rated movie.
SELECT title, rating FROM film WHERE rating != 'R';

-- 8) Find the ten shortest movies.
SELECT title, length FROM film ORDER BY length ASC LIMIT 10;

-- 9) Find the movies with the longest runtime, without using LIMIT.
SELECT title, length FROM film ORDER BY length DESC;

SELECT * FROM film;

-- 10) Find all movies that have deleted scenes.
SELECT title, special_features FROM film WHERE special_features LIKE '%Deleted Scenes%';

-- 11) Using HAVING, reverse-alphabetically list the last names that are not repeated.
SELECT last_name, COUNT(last_name) AS number_of_times FROM actor GROUP BY last_name HAVING number_of_times < 2 ORDER BY last_name DESC;

-- 12) Using HAVING, list the last names that appear more than once, from highest to lowest frequency.
SELECT last_name, COUNT(last_name) AS number_of_times FROM actor GROUP BY last_name HAVING number_of_times > 1 ORDER BY number_of_times DESC;

-- 13) Which actor has appeared in the most films?
SELECT a.first_name, a.last_name, COUNT(fa.actor_id) AS number_of_times, a.actor_id FROM actor a
JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY a.actor_id
ORDER BY number_of_times DESC LIMIT 1;

-- 14) When is 'Academy Dinosaur' due?
-- Try one (This shows newest return date, but not really when it will be due)
SELECT f.title, r.return_date FROM rental r
JOIN inventory i ON i.inventory_id = r.inventory_id
JOIN film f ON f.film_id = i.film_id
WHERE f.title = 'Academy Dinosaur'
ORDER BY r.return_date DESC LIMIT 1;

-- Try two
SELECT f.title, r.rental_date, DATE_ADD(r.rental_date, INTERVAL 6 DAY) AS date_due FROM film f
JOIN inventory i ON i.film_id = f.film_id
JOIN rental r ON r.inventory_id = i.inventory_id
WHERE f.title = 'Academy Dinosaur' AND r.return_date IS NULL
ORDER BY f.title;

-- 15) What is the average runtime of all films?
SELECT AVG(length) FROM film;

-- 16) List the average runtime for every film category.
SELECT c.name, AVG(f.length) FROM category c
JOIN film_category fc ON fc.category_id = c.category_id
JOIN film f ON f.film_id = fc.film_id
GROUP BY c.name;

-- 17) List all movies featuring a robot.
SELECT title, description FROM film WHERE description LIKE '%Robot%';

-- 18) How many movies were released in 2010?
SELECT COUNT(film_id) AS releases FROM film WHERE release_year = 2010;

-- 19) Find the titles of all the horror movies.
SELECT f.title FROM film f
JOIN film_category fc ON fc.film_id = f.film_id
JOIN category c ON c.category_id = fc.category_id
WHERE c.name LIKE '%horro%'
GROUP BY f.title;

-- 20) List the full name of the staff member with the ID of 2.
SELECT first_name, last_name FROM staff WHERE staff_id = 2;

-- 21) List all the movies that Fred Costner has appeared in.
SELECT f.title FROM film f
JOIN film_actor fa ON fa.film_id = f.film_id
JOIN actor a ON a.actor_id = fa.actor_id
WHERE a.first_name = 'Fred' AND last_name = 'Costner'
GROUP BY f.title;

-- 22) How many distinct countries are there?
SELECT DISTINCT COUNT(country) FROM country;

-- 23) List the name of every language in reverse-alphabetical order.
SELECT name FROM language ORDER BY name DESC;

-- 24) List the full names of every actor whose surname ends with '-son' in alphabetical order by their forename.
SELECT first_name, last_name FROM actor WHERE last_name LIKE '%son' ORDER BY first_name ASC;

-- 25) Which category contains the most films?
SELECT COUNT(fc. category_id) AS number_of_movies, c.name FROM film_category fc
JOIN category c ON fc.category_id = c.category_id
GROUP BY fc.category_id
ORDER BY number_of_movies DESC LIMIT 1;

